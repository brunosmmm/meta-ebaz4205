From b9411486d6071d2f54f300f11bff1e7b8956f929 Mon Sep 17 00:00:00 2001
From: Vishal Sagar <vishal.sagar@xilinx.com>
Date: Fri, 5 Mar 2021 04:00:13 +0530
Subject: [PATCH] ASoC: xlnx: Get only capture or playback path working

Earlier this pl sound card driver required both the capture and playback
path to be present. This patch now fixes this and allows only capture or
only playback to work. This means that for every Xilinx Audio Formatter
IP there is one PL sound card driver even if Audio Formatter has only
one path (s2mm or mm2s) enabled.

Signed-off-by: Vishal Sagar <vishal.sagar@xilinx.com>
State: pending
---
 sound/soc/xilinx/xlnx_pl_snd_card.c | 23 +++++++++++++++++++----
 1 file changed, 19 insertions(+), 4 deletions(-)

diff --git a/sound/soc/xilinx/xlnx_pl_snd_card.c b/sound/soc/xilinx/xlnx_pl_snd_card.c
index d0ac9316a739..142eacaf2916 100644
--- a/sound/soc/xilinx/xlnx_pl_snd_card.c
+++ b/sound/soc/xilinx/xlnx_pl_snd_card.c
@@ -284,7 +284,7 @@ static int find_link(struct device_node *node, int direction)
 
 static int xlnx_snd_probe(struct platform_device *pdev)
 {
-	u32 i;
+	u32 i, max_links = 0, start_count = 0;
 	size_t sz;
 	char *buf;
 	int ret, audio_interface;
@@ -298,6 +298,17 @@ static int xlnx_snd_probe(struct platform_device *pdev)
 	if (!node)
 		return -ENODEV;
 
+	if (node[XLNX_PLAYBACK] && node[XLNX_CAPTURE]) {
+		max_links = 2;
+		start_count = XLNX_PLAYBACK;
+	} else if (node[XLNX_PLAYBACK]) {
+		max_links = 1;
+		start_count = XLNX_PLAYBACK;
+	} else if (node[XLNX_CAPTURE]) {
+		max_links = 1;
+		start_count = XLNX_CAPTURE;
+	}
+
 	card = devm_kzalloc(&pdev->dev, sizeof(struct snd_soc_card),
 			    GFP_KERNEL);
 	if (!card)
@@ -306,7 +317,7 @@ static int xlnx_snd_probe(struct platform_device *pdev)
 	card->dev = &pdev->dev;
 
 	card->dai_link = devm_kzalloc(card->dev,
-				      sizeof(*dai) * XLNX_MAX_PATHS,
+				      sizeof(*dai) * max_links,
 				      GFP_KERNEL);
 	if (!card->dai_link)
 		return -ENOMEM;
@@ -318,7 +329,7 @@ static int xlnx_snd_probe(struct platform_device *pdev)
 		return -ENOMEM;
 
 	card->num_links = 0;
-	for (i = XLNX_PLAYBACK; i < XLNX_MAX_PATHS; i++) {
+	for (i = start_count; i < (start_count + max_links); i++) {
 		struct device_node *pnode = of_parse_phandle(node[i],
 							     "xlnx,snd-pcm", 0);
 		if (!pnode) {
@@ -345,7 +356,11 @@ static int xlnx_snd_probe(struct platform_device *pdev)
 		}
 		of_node_put(pnode);
 
-		dai = &card->dai_link[i];
+		if (max_links == 2)
+			dai = &card->dai_link[i];
+		else
+			dai = &card->dai_link[0];
+
 		audio_interface = find_link(node[i], i);
 		switch (audio_interface) {
 		case I2S_AUDIO:
-- 
2.33.1

